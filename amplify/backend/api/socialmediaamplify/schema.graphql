# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
input AMPLIFY {
  globalAuthRule: AuthRule = { allow: public }
} # FOR TESTING ONLY!
type Post
  @model
  @auth(
    rules: [
      { allow: owner, ownerField: "username" }
      { allow: public, operations: [read] }
    ]
  ) {
  id: ID!
  name: String!
  content: String!
  username: String
    @index(name: "postsByUsername", queryField: "postsByUsername")
  coverImage: String
  comments: [Comment] @hasMany(indexName: "byPost", fields: ["id"]) #check out: https://docs.amplify.aws/cli/graphql/data-modeling/#has-many-relationship
}

type Comment
  @model
  @auth(
    rules: [
      { allow: owner, ownerField: "createdBy" }
      { allow: public, operations: [read] }
    ]
  ) {
  id: ID!
  message: String
  post: Post @belongsTo(fields: ["postID"])
  postID: ID @index(name: "byPost")
}

# type User @model {
#   id: ID!
#   username: String!
#   email: String!
#   followers: [Follower] @hasMany
#   following: [Following] @hasMany
# }

type User
  @model
  @auth(rules: [{ allow: owner }, { allow: public, operations: [read] }]) {
  id: ID!
  name: String
  email: String
  followers: [Follower] @hasMany
  following: [Following] @hasMany
}

type Follower @model {
  id: ID!
  userID: ID!
  followerID: ID!
  user: User @belongsTo(fields: ["userID"])
  follower: User @belongsTo(fields: ["followerID"])
}

type Following @model {
  id: ID!
  userID: ID!
  followerID: ID!
  user: User @belongsTo(fields: ["userID"])
  follower: User @belongsTo(fields: ["followerID"])
}
